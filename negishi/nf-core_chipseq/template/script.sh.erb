#!/usr/bin/env bash

# Clean the environment
module purge

# Go to workding directory
workdir=<%= context.workdir %>

if [ ! -d "$workdir" ]
then
	echo "$workdir does not exist."
	mkdir -p $workdir
fi
cd $workdir

# Load the required module
module load nextflow

module list

# Pipeline parameters
version=<%= context.version %>
input_input="<%= context.input %>"
output=<%= context.output %>
save_reference=<%= context.save_reference %>
extra_parameters="<%= context.extra_parameters %>"
fasta_input="<%= context.fasta %>"
gtf_input="<%= context.gtf %>"
gff_input="<%= context.gff %>"
reference_input="<%= context.reference %>" 
save_reference_input=<%= context.save_reference %>
resume_input=<%= context.resume %>
gencode_input=<%= context.gencode %>
star_index_input="<%= context.star_index %>"
histat2_index_input="<%= context.hisat2_index %>"
hisat2_build_memory_input="<%= context.hisat2_build_memory %>"
rsem_index_input="<%= context.rsem_index %>"
salmon_index_input="<%= context.salmon_index %>"
trimmer="<%= context.trimmer %>"
aligner="<%= context.aligner %>"
pseudo_aligner="<%= context.pseudo_aligner %>"
featurecounts_group_type_input=<%= context.featurecounts_group_type %>
featurecounts_feature_type_input=<%= context.featurecounts_feature_type %>
extra_trimgalore_args_input="<%= context.extra_trimgalore_args %>"
extra_fastp_args_input="<%= context.extra_fastp_args %>"
extra_star_align_args_input="<%= context.extra_star_align_args %>"
extra_salmon_quant_args_input="<%= context.extra_salmon_quant_args %>"
remove_ribo_rna_input=<%= context.remove_ribo_rna  %>
umitools_extract_method_input="<%= context.umitools_extract_method %>"
umitools_bc_pattern_input="<%= context.umitools_bc_pattern %>"
umitools_bc_pattern2_input="<%= context.umitools_bc_pattern2 %>"
umi_discard_read_input="<%= context.umi_discard_read %>"
umitools_umi_separator_input="<%= context.umitools_umi_separator %>"
umitools_grouping_method_input="<%= context.umitools_grouping_method %>"
min_trimmed_reads_input="<%= context.min_trimmed_reads %>"
bbsplit_fasta_list_input="<%= context.bbsplit_fasta_list %>"
bbsplit_index_input="<%= context.bbsplit_index %>"
ribo_database_manifest_input="<%= context.ribo_database_manifest %>"
with_umi_input=<%= context.with_umi %>
skip_umi_extract_input=<%= context.skip_umi_extract %>
umitools_dedup_stats_input=<%= context.umitools_dedup_stats %>
save_umi_intermeds_input=<%= context.save_umi_intermeds %>
save_trimmed_input=<%= context.save_trimmed %>
save_bbsplit_reads_input=<%= context.save_bbsplit_reads %>
skip_bbsplit_input=<%= context.skip_bbsplit %>
save_non_ribo_reads_input=<%= context.save_non_ribo_reads %>
bam_csi_index_input=<%= context.bam_csi_index %>
save_unaligned_input=<%= context.save_unaligned %>

# Test whether input is set
if [ -z "${input_input// }" ]
then
        echo "you did not provide input file"
        input=""
else
        echo "your input file is: $input_input"
        input="--input $input_input"
fi


# Test whether reference is set
if [ -z "${reference_input// }" ]
then
	echo "Remember to provide your own genome in fasta"
	reference=""
	iGenomes_base=""
else
        echo "you're using the iGenomes $reference_input"
	reference="--genome $reference_input"
	iGenomes_base="--igenomes_base /depot/itap/datasets/igenomes"
fi

# Test whether fasta is set
if [ -z "${fasta_input// }" ]
then
        echo "you did not provide fasta file"
        fasta=""
else
	echo "you're using your own genome $fasta_input"
        fasta="--fasta $fasta_input"
fi


# Test whether gtf is set
if [ -z "${gtf_input// }" ]
then
        echo "you did not provide gtf file"
	gtf=""
else
	echo "you're using your own annotation $gtf_input"
        gtf="--gtf $gtf_input"
fi

# Test whether gff is set
if [ -z "${gff_input// }" ]
then
        echo "you did not provide gff file"
        gff=""
else
        echo "you're using your own annotation $gff_input"
        gff="--gff $gff_input"
fi

# Test whether gencode is set
if [ $gencode_input -eq 1 ]
then
        echo "Your reference will be saved locally"
        gencode="--gencode"
else
        echo "You do not want to save reference"
        gencode=""
fi

# Test whether star_index is set
if [ -z "${star_index_input// }" ]
then
        echo "you did not provide star_index file"
        star_index=""
else
        echo "you're using your own star_index"
        star_index="--star_index $star_index_input"
fi

# Test whether histat2_index is set
if [ -z "${histat2_index_input// }" ]
then
        echo "you did not provide histat2_index file"
        histat2_index=""
else
        echo "you're using your own histat2_index"
        histat2_index="--histat2_index $histat2_index_input"
fi

# Test whether hisat2_build_memory is set
if [ -z "${hisat2_build_memory_input// }" ]
then
        echo "you did not provide hisat2_build_memory file"
        hisat2_build_memory=""
else
        echo "you're using your own hisat2_build_memory"
        hisat2_build_memory="--hisat2_build_memory $hisat2_build_memory_input"
fi

# Test whether rsem_index is set
if [ -z "${rsem_index_input// }" ]
then
        echo "you did not provide rsem_index file"
        rsem_index=""
else
        echo "you're using your own rsem_index"
        rsem_index="--rsem_index $rsem_index_input"
fi

# Test whether salmon_index is set
if [ -z "${salmon_index_input// }" ]
then
        echo "you did not provide salmon_index file"
        salmon_index=""
else
        echo "you're using your own salmon_index"
        salmon_index="--salmon_index $salmon_index_input"
fi

# Test whether extra_star_align_args is set
if [ -z "${extra_star_align_args_input// }" ]
then
        echo "you did not provide extra_star_align_args"
	extra_star_align_args=""
else
	extra_star_align_args='--extra_star_align_args "'$extra_star_align_args_input'"'
fi

echo $extra_star_align_args


# Test whether extra_salmon_quant_args is set
if [ -z "${extra_salmon_quant_args_input// }" ]
then
        echo "you did not provide extra_salmon_quant_args"
        extra_salmon_quant_args=""
else
	extra_salmon_quant_args='--extra_salmon_quant_args "'$extra_salmon_quant_args_input'"'
fi

echo $extra_salmon_quant_args

# Test whether extra_trimgalore_args is set
if [ -z "${extra_trimgalore_args_input// }" ]
then
        echo "you did not provide extra_trimgalore_args"
        extra_trimgalore_args=""
else
        extra_trimgalore_args='--extra_trimgalore_args "'$extra_trimgalore_args_input'"'
fi

# Test whether extra_fastp_args is set
if [ -z "${extra_fastp_args_input// }" ]
then
        echo "you did not provide extra_fastp_args"
        extra_fastp_args=""
else
        extra_fastp_args='--extra_fastp_args "'$extra_fastp_args_input'"'
fi

# Test whether save_reference is set
if [ $save_reference_input -eq 1 ]
then
	echo "Your reference will be saved locally"
	save_reference="--save_reference"
else
	echo "You do not want to save reference"
	save_reference=""
fi

# Test whether featurecounts_group_type is set
if [ -z "${featurecounts_group_type_input// }" ]
then
        featurecounts_group_type=""
else
        featurecounts_group_type="--featurecounts_group_type $featurecounts_group_type_input"
fi

# Test whether featurecounts_feature_type is set
if [ -z "${featurecounts_feature_type_input// }" ]
then
        featurecounts_feature_type=""
else
        featurecounts_feature_type="--featurecounts_feature_type $featurecounts_feature_type_input"
fi

# Test whether remove_ribo_rna is set
if [ $remove_ribo_rna_input -eq 1 ]
then
        remove_ribo_rna="--remove_ribo_rna"
else
        remove_ribo_rna=""
fi


if [ -z "${umitools_extract_method_input// }" ]
then

       umitools_extract_method=""
else
        umitools_extract_method="--umitools_extract_method $umitools_extract_method_input"
fi
# Test whether umitools_bc_pattern is set
if [ -z "${umitools_bc_pattern_input// }" ]
then

       umitools_bc_pattern=""
else
        umitools_bc_pattern="--umitools_bc_pattern $umitools_bc_pattern_input"
fi
# Test whether umitools_bc_pattern2 is set
if [ -z "${umitools_bc_pattern2_input// }" ]
then

       umitools_bc_pattern2=""
else
        umitools_bc_pattern2="--umitools_bc_pattern2 $umitools_bc_pattern2_input"
fi
# Test whether umi_discard_read is set
if [ -z "${umi_discard_read_input// }" ]
then

       umi_discard_read=""
else
        umi_discard_read="--umi_discard_read $umi_discard_read_input"
fi
# Test whether umitools_umi_separator is set
if [ -z "${umitools_umi_separator_input// }" ]
then

       umitools_umi_separator=""
else
        umitools_umi_separator="--umitools_umi_separator $umitools_umi_separator_input"
fi
# Test whether umitools_grouping_method is set
if [ -z "${umitools_grouping_method_input// }" ]
then

       umitools_grouping_method=""
else
        umitools_grouping_method="--umitools_grouping_method $umitools_grouping_method_input"
fi
# Test whether min_trimmed_reads is set
if [ -z "${min_trimmed_reads_input// }" ]
then

       min_trimmed_reads=""
else
        min_trimmed_reads="--min_trimmed_reads $min_trimmed_reads_input"
fi

# Test whether bbsplit_fasta_list is set
if [ -z "${bbsplit_fasta_list_input// }" ]
then

       bbsplit_fasta_list=""
else
        bbsplit_fasta_list="--bbsplit_fasta_list $bbsplit_fasta_list_input"
fi
# Test whether bbsplit_index is set
if [ -z "${bbsplit_index_input// }" ]
then

       bbsplit_index=""
else
        bbsplit_index="--bbsplit_index $bbsplit_index_input"
fi
# Test whether ribo_database_manifest is set
if [ -z "${ribo_database_manifest_input// }" ]
then

       ribo_database_manifest=""
else
        ribo_database_manifest="--ribo_database_manifest $ribo_database_manifest_input"
fi

# Test whether skip_umi_extract is set
if [ $skip_umi_extract_input -eq 1 ]
then
        skip_umi_extract="--skip_umi_extract"
else
        skip_umi_extract=""
fi
# Test whether umitools_dedup_stats is set
if [ $umitools_dedup_stats_input -eq 1 ]
then
        umitools_dedup_stats="--umitools_dedup_stats"
else
        umitools_dedup_stats=""
fi
# Test whether save_umi_intermeds is set
if [ $save_umi_intermeds_input -eq 1 ]
then
        save_umi_intermeds="--save_umi_intermeds"
else
        save_umi_intermeds=""
fi
# Test whether save_trimmed is set
if [ $save_trimmed_input -eq 1 ]
then
        save_trimmed="--save_trimmed"
else
        save_trimmed=""
fi
# Test whether save_bbsplit_reads is set
if [ $save_bbsplit_reads_input -eq 1 ]
then
        save_bbsplit_reads="--save_bbsplit_reads"
else
        save_bbsplit_reads=""
fi
# Test whether skip_bbsplit is set
if [ $skip_bbsplit_input -eq 1 ]
then
        skip_bbsplit="--skip_bbsplit"
else
        skip_bbsplit=""
fi
# Test whether save_non_ribo_reads is set
if [ $save_non_ribo_reads_input -eq 1 ]
then
        save_non_ribo_reads="--save_non_ribo_reads"
else
        save_non_ribo_reads=""
fi
# Test whether bam_csi_index is set
if [ $bam_csi_index_input -eq 1 ]
then
        bam_csi_index="--bam_csi_index"
else
        bam_csi_index=""
fi
# Test whether save_unaligned is set
if [ $save_unaligned_input -eq 1 ]
then
        save_unaligned="--save_unaligned"
else
        save_unaligned=""
fi

# Test whether resume is set
if [ $resume_input -eq 1 ]
then
	echo "You job will resume previous run"
        resume="-resume"
else
	echo "This is a fresh run"
        resume=""
fi


echo "Below is the nextflow command you are running:"
echo "+++++++++++++++++++++++++++++++++++++++++++"

# Test whether with_umi is set
if [ $with_umi_input -eq 1 ]
then
	with_umi="--with_umi"
        command="nextflow run $version $input --outdir $output -profile singularity $iGenomes_base $reference $fasta $gff $gtf $gencode $star_index $hisat2_index $hisat2_build_memory $rsem_index $salmon_index $save_reference $trimmer $aligner $pseudo_aligner $extra_trimgalore_args $extra_fastp_args $extra_star_align_args $extra_salmon_quant_args $featurecounts_group_type $featurecounts_feature_type $remove_ribo_rna $with_umi $umitools_extract_method $skip_umi_extract $umitools_bc_pattern $umitools_bc_pattern2 $umi_discard_read $umitools_umi_separator $umitools_grouping_method $umitools_dedup_stats $save_umi_intermeds $min_trimmed_reads $skip_trimming $save_trimmed $bbsplit_fasta_list $bbsplit_index $save_bbsplit_reads $skip_bbsplit $ribo_database_manifest $save_non_ribo_reads $bam_csi_index $save_unaligned $extra_parameters $resume"
else
	with_umi=""
	command="nextflow run $version $input --outdir $output -profile singularity $iGenomes_base $reference $fasta $gff $gtf $gencode $star_index $hisat2_index $hisat2_build_memory $rsem_index $salmon_index $save_reference $trimmer $aligner $pseudo_aligner $extra_trimgalore_args $extra_fastp_args $extra_star_align_args $extra_salmon_quant_args $featurecounts_group_type $featurecounts_feature_type $remove_ribo_rna $min_trimmed_reads  $save_trimmed $bbsplit_fasta_list $bbsplit_index $save_bbsplit_reads $skip_bbsplit $ribo_database_manifest $save_non_ribo_reads $bam_csi_index $save_unaligned $extra_parameters $resume"
fi

echo $command
eval $command
